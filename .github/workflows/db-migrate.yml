name: Apply Alembic Migrations

on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed


jobs:
  migrate:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure this includes alembic and your database driver

      - name: Apply Alembic migrations
        env:
          ENVIRONMENT: production
          CHROMA_PUBLIC_URL: "http://localhost:8000"
          JWT_SECRET: fake_jwt_secret
          GROQ_API_KEY: fake_groq_api_key
          OPENAI_API_KEY: fake_openai_api_key
          SUPABASE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF0Z2R2cW10YmJ0aWZ2Z2N0Z3Z3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTYzMjI4MjQsImV4cCI6MjAxMTg5ODgyNH0.i9QWzUY21Y4q0sZ57YB5489J7x089g64vj9229111"
          SUPABASE_URL: "http://supabase:3000"
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          alembic upgrade head

      - name: Check for migration errors
        if: failure()
        run: |
          echo "Migration failed. Check the logs for details."
          exit 1

      - name: Notify on success
        if: success()
        run: |
          echo "Migrations applied successfully!"
