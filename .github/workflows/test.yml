name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main] # Adjust this if your main branch has a different name

env:
  CHROMA_AUTH_TOKEN_TRANSPORT_HEADER: X-Chroma-Token
  CHROMA_SERVER_HOST: chroma
  CHROMA_SERVER_HTTP_PORT: 8000
  CHROMA_SERVER_AUTH_CREDENTIALS: test-token
  CHROMA_SERVER_AUTH_PROVIDER: chromadb.auth.token_authn.TokenAuthClientProvider
  DATABASE_URL: postgresql://postgres:postgres@localhost:5434/test_db
  ENVIRONMENT: test
  GROQ_API_KEY: fake_groq_api_key
  JWT_SECRET: fake_jwt_secret
  OPENAI_API_KEY: fake_openai_api_key
  SUPABASE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF0Z2R2cW10YmJ0aWZ2Z2N0Z3Z3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTYzMjI4MjQsImV4cCI6MjAxMTg5ODgyNH0.i9QWzUY21Y4q0sZ57YB5489J7x089g64vj9229111"
  SUPABASE_URL: "http://supabase:3000"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      chroma:
        image: ghcr.io/chroma-core/chroma:latest
        ports:
          - 8000:8000

      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5434:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        run: uv run pytest tests/ -v
